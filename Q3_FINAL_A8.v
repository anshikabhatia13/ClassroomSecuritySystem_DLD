/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module Decoder4 (
    output out_0,
    output out_1,
    output out_2,
    output out_3,
    output out_4,
    output out_5,
    output out_6,
    output out_7,
    output out_8,
    output out_9,
    output out_10,
    output out_11,
    output out_12,
    output out_13,
    output out_14,
    output out_15,
    input [3:0] sel
);
    assign out_0 = (sel == 4'h0)? 1'b1 : 1'b0;
    assign out_1 = (sel == 4'h1)? 1'b1 : 1'b0;
    assign out_2 = (sel == 4'h2)? 1'b1 : 1'b0;
    assign out_3 = (sel == 4'h3)? 1'b1 : 1'b0;
    assign out_4 = (sel == 4'h4)? 1'b1 : 1'b0;
    assign out_5 = (sel == 4'h5)? 1'b1 : 1'b0;
    assign out_6 = (sel == 4'h6)? 1'b1 : 1'b0;
    assign out_7 = (sel == 4'h7)? 1'b1 : 1'b0;
    assign out_8 = (sel == 4'h8)? 1'b1 : 1'b0;
    assign out_9 = (sel == 4'h9)? 1'b1 : 1'b0;
    assign out_10 = (sel == 4'ha)? 1'b1 : 1'b0;
    assign out_11 = (sel == 4'hb)? 1'b1 : 1'b0;
    assign out_12 = (sel == 4'hc)? 1'b1 : 1'b0;
    assign out_13 = (sel == 4'hd)? 1'b1 : 1'b0;
    assign out_14 = (sel == 4'he)? 1'b1 : 1'b0;
    assign out_15 = (sel == 4'hf)? 1'b1 : 1'b0;
endmodule

